---
import '../styles/global.css';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<!-- Primary Meta Tags -->
		<meta name="title" content="GreenBugX | Web Developer • Pentester • Designer">
		<meta name="description" content="Welcome to GreenBugX — a portfolio showcasing expertise in web development, ethical hacking, and creative UI/UX design.">

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website">
		<meta property="og:url" content="https://greenbugx.dedyn.io/">
		<meta property="og:title" content="GreenBugX | Web Developer • Pentester • Designer">
		<meta property="og:description" content="Discover GreenBugX's work in full-stack development, cybersecurity, and user-centered design.">
		<meta property="og:image" content="https://greenbugx.dedyn.io/images/a_vibrant_logo_for_green_bug_x.jpeg">

		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:url" content="https://greenbugx.dedyn.io/">
		<meta name="twitter:title" content="GreenBugX | Web Developer • Pentester • Designer">
		<meta name="twitter:description" content="Explore the portfolio of GreenBugX, blending tech skills with creative vision.">
		<meta name="twitter:image" content="https://greenbugx.dedyn.io/images/a_vibrant_logo_for_green_bug_x.jpeg">

		<!-- Additional Meta Tags -->
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="author" content="GreenBugX">
		<meta name="keywords" content="GreenBugX, web Web Developer, ethical hacker, pentester, UI/UX designer, portfolio, cybersecurity, full-stack development">
		<meta name="robots" content="index, follow">

		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.jpeg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap" rel="stylesheet">
		<script>
			(function () {
			  const _0x23a4 = [
				"contextmenu",
				"addEventListener",
				"keydown",
				"preventDefault",
				"F12",
				"ctrlKey",
				"shiftKey",
				"I",
				"u",
				"getTime",
				"body",
				"innerHTML",
				"DevTools detected! Please close it.",
				"href",
				"about:blank",
				"copy",
				"cut",
				"paste",
				"dragstart",
				"clear",
				"log",
				"Console use is disabled!",
			  ];
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[0], function (_0x3a1b) {
				_0x3a1b[_0x23a4[3]]();
			  });
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[2], function (_0x4f8d) {
				if (
				  _0x4f8d["key"] === _0x23a4[4] ||
				  (_0x4f8d[_0x23a4[5]] && _0x4f8d[_0x23a4[6]] && _0x4f8d["key"] === _0x23a4[7]) ||
				  (_0x4f8d[_0x23a4[5]] && _0x4f8d["key"] === _0x23a4[8])
				) {
				  _0x4f8d[_0x23a4[3]]();
				}
			  });
			  setInterval(function () {
				let _0x5a6a = new Date()[_0x23a4[9]]();
				debugger;
				let _0x2f4a = new Date()[_0x23a4[9]]();
				if (_0x2f4a - _0x5a6a > 100) {
				  document[_0x23a4[10]][_0x23a4[11]] = _0x23a4[12];
				  setTimeout(() => (window[_0x23a4[13]] = _0x23a4[14]), 1000);
				}
			  }, 500);
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[15], (_0x167d) => _0x167d[_0x23a4[3]]());
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[16], (_0x3467) => _0x3467[_0x23a4[3]]());
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[17], (_0x8912) => _0x8912[_0x23a4[3]]());
			  (document as unknown as Record<string, any>)[_0x23a4[1]](_0x23a4[18], (_0x5543) => _0x5543[_0x23a4[3]]());
			  setInterval(() => {
				console[_0x23a4[19]]();
				console[_0x23a4[20]](_0x23a4[21]);
			  }, 1000);
			})();
		</script>
	</head>
	<body class="bg-black text-white min-h-screen">
		<slot />
	</body>
</html>

<style is:global>
	:root {
		--font-tech-mono: 'Share Tech Mono', monospace;
	}
	
	body {
		font-family: var(--font-tech-mono);
		margin: 0;
		padding: 0;
	}
</style>